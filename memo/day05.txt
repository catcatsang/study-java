추상 클래스
	필드 안에 구현이 안된 메소드가 선언되어 있는 클래스를 추상 클래스라고 한다.
	이 때 구현되지 않은 메소드를 추상 메소드라고 부른다.
	즉, 추상 클래스에 추상 메소드를 선언할수있다.
	이는 반드시 구혆야 하기 때문에 "강제성을: 부여할수있게 된다.

추상 클래스 선언
	abstract class 클래스명 {
		abstract리턴타입 메소드명(매개변수,...);
		일반 메소드도 선언 가능하다.
	}

인터페이스(틀)
	추상 클래스를 고도화시킨 문법, 상수와 추상 메소드만 존재한다.
	구현은 지정한 클래스에서 진행하고, 인터페이스를 다른 클래스에 지정할 때에는
	implements 키워드를 사용한다.
	

추상클래스와 인터페이스 간의 관계
	인터페이스를 ㅌ클래스에 바로 지정하면 모든 메소드에 강제성이 부여되기 때문에
	전부 다 구현해야 한다. 하지만 일반적인 상황에서는 필요한 메소드를 골라서 재졍의한다.
	따라서 인터페이스를 직접 지정하지않고 다른 클래스에 지정한 후 구현해 놓는다면
	강제성이 소멸되고 이로 인해 골라서 재정의할수 있게 된다.
	이 ㄸ 중간에서 강제성을 없애주는 클래스를 추상 클래스로 선언하기로 하며,
	추상 클래스 이름 뒤에는 Adpater를 붙여서 목적을 알려준다.

내부 클래스 (inner class)
	어떤 영역 안에 클래스가 선언되면 내부 클래스라고 한다.


익명 클래스 (Anonymous Inner Class)
	이름이 없는 클래스이며, 구현되지 않은 필드를 구현하기 위해서 일회성으로 생성되는 클래스이다.
	
	
[실습]
	나이키 회사를 설립한다. // 인터페이스 
		
	자밀점은 일반 판매를 진행하는 지점이고, // 
'	강남점은 무료 나눔 행사를 진행하는 지점이다.
		
	지점을 새로 오픈하면, 본사에 정해진 양식에 맞춰 최초 1회 동록해야한다.
	
	무료 나눔  



강남 지점에서 무료로 뿌리기 위해서 오버라이딩으로 getMenu 를 









