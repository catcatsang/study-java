package com.app.domain.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import com.app.jdbc.configuration.*;
import com.app.domain.vo.MemberVO;

public class MemberDAO {
   private Connection connection;   // DB 연결 객체
   private PreparedStatement preparedStatement;   // SQL 실행을 위한 객체
   private ResultSet resultSet;   // SELECT 결과를 저장하는 객체
   
//   회원가입 (INSERT)
   public void insert(MemberVO memberVO) {
//      회원 정보를 삽입하는 SQL 쿼리
      String query = "INSERT INTO TBL_MEMBER "
            + "(ID, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_AGE, MEMBER_GENDER "
            + "VALUES(SEQ_MEMBER.NEXTVAL, ?, ?, ?, ?, ?)";
      
//      데이터베이스 연결
      connection = Configuration.getConnection();
      try {
//         SQL 실행을 위한 prepareStatement 생성
         preparedStatement = connection.prepareStatement(query);
         
//         ?(바인딩 변수)에 회원의 정보 세팅
         preparedStatement.setString(1, memberVO.getMemberEmail());
         preparedStatement.setString(2, memberVO.getMemberPassword());
         preparedStatement.setString(3, memberVO.getMemberName());
         preparedStatement.setInt(4, memberVO.getMemberAge());
         preparedStatement.setString(5, memberVO.getMemberGender());
         
//         SQL 실행(INSERT 수행)
         preparedStatement.executeUpdate();
         
      } catch (SQLException e) {
         e.printStackTrace();   // 예외 발생 시 출력
      } finally {
         try {
//            리소스 정리
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         } catch (SQLException e) {
            throw new RuntimeException();   // 예외 발생 시 런타임 예외 던지기
         }
      }
            
   }
   
//   로그인(이메일과 비밀번호로 회원 조회)
   public MemberVO selectByMemberEmailAndMemberPassword(MemberVO memberVO) {
      MemberVO member = null;   // 조회된 회원 정보를 저장할 객체
      String query = "SELECT "
            + "ID, MEMBER_EMAIL, MEMBER_PASSWORD, "
            + "MEMBER_NAME, MEMBER_AGE, MEMBER_GENDER, CREATED_DATE, UPDATED_DATE "
            + "FROM TBL_MEMBER "
            + "WHERE MEMBER_EMAIL = ? AND MEMBER_PASSWORD = ?";
      
      connection = Configuration.getConnection();   // DB 연결
      try {
         preparedStatement = connection.prepareStatement(query);
         preparedStatement.setString(1, memberVO.getMemberEmail());   // 이메일의 실제 값 설정(바인딩)
         preparedStatement.setString(2, memberVO.getMemberPassword());
         
         resultSet = preparedStatement.executeQuery();
         
         if(resultSet.next()) {
            member = new MemberVO();
            
            member.setId(resultSet.getLong(1));   // id
            member.setMemberEmail(resultSet.getString(2));   // 이메일
            member.setMemberPassword(resultSet.getString(3));   // 비밀번호
            member.setMemberName(resultSet.getString(4));   // 이름
            member.setMemberAge(resultSet.getInt(5));   // 나이
            member.setMemberGender(resultSet.getString(6));   // 성별
            member.setCreatedDate(resultSet.getString(7));   // 생성 날짜
            member.setUpdatedDate(resultSet.getString(8));   // 수정 날짜
         }
         
      } catch (SQLException e) {
         e.printStackTrace();   // 예외 발생시 출력
      } finally {
         try {
            if(resultSet != null) {
               resultSet.close();
            }
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         } catch (SQLException e) {
            throw new RuntimeException();
         }
      }
      
      return member;
   }
   
//   아이디로 회원 조회
      public MemberVO selectById(Long id) {
         MemberVO member = null;
         String query = "SELECT "
               +"ID, MEMBER_EMAIL, MEMBER_PASSWORD, "
               + "MEMBER_NAME, MEMBER_AGE, MEMBER_GENDER, CREATED_DATE, UPDATED_DATE "
               + "FROM TBL_MEMBER "
               + "WHERE ID = ?";
         
         connection = Configuration.getConnection();
         
         try {
         preparedStatement = connection.prepareStatement(query);      
         preparedStatement.setLong(1, id);
         
         resultSet = preparedStatement.executeQuery();
         
         if (resultSet.next()) {
            member = new MemberVO();
            
             member.setId(resultSet.getLong(1));   // id
               member.setMemberEmail(resultSet.getString(2));   // 이메일
               member.setMemberPassword(resultSet.getString(3));   // 비밀번호
               member.setMemberName(resultSet.getString(4));   // 이름
               member.setMemberAge(resultSet.getInt(5));   // 나이
               member.setMemberGender(resultSet.getString(6));   // 성별
               member.setCreatedDate(resultSet.getString(7));   // 생성 날짜
               member.setUpdatedDate(resultSet.getString(8));   // 수정 날짜
         }
      } catch (SQLException e) {
         e.printStackTrace();
      } finally {
         try {
            if(resultSet != null) {
               resultSet.close();
            }
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         } catch (SQLException e) {
            throw new RuntimeException();
         }
      }
      return member;   
      }
      
//   회원 정보 수정
      public void update(MemberVO memberVO) {
         String query = "UPDATE TBL_MEMBER "
               + "SET MEMBER_NAME = ?, MEMBER_AGE = ?, MEMBER_GENDER = ? "
               + "WHERE ID = ?";
         
         connection = Configuration.getConnection();
         
         try {
         preparedStatement = connection.prepareStatement(query);
           preparedStatement.setString(1, memberVO.getMemberName());
           preparedStatement.setInt(2, memberVO.getMemberAge());
           preparedStatement.setString(3, memberVO.getMemberGender());
           preparedStatement.setLong(4, memberVO.getId());
         
         preparedStatement.executeUpdate();
         
      } catch (SQLException e) {
         e.printStackTrace();
      } finally {
         try {
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         }catch(SQLException e){
            throw new RuntimeException();
         }
      }
      }
      
//   삭제하기
      public void delete(Long id) {
         String query = "DELETE FROM TBL_MEMBER "
               + "WHERE ID = ?";
         
         connection = Configuration.getConnection();
         
         try {
         preparedStatement = connection.prepareStatement(query);
         preparedStatement.setLong(1, id);
         
         preparedStatement.executeUpdate();
      } catch (SQLException e) {
         e.printStackTrace();
      } finally {
         try {
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         } catch (SQLException e) {
            throw new RuntimeException();
         }
      }
      }
//   전체 회원 조회(while문 돌려야댐)
      public List<MemberVO> selectAllMembers(MemberVO memberVO) {
         List<MemberVO> memberList = new ArrayList<>();
         String query = "SELECT * "
               + "FROM TBL_MEMBER";  
      
         connection = Configuration.getConnection();
         
         try {
         preparedStatement = connection.prepareStatement(query);
         
         resultSet = preparedStatement.executeQuery();
         
         if(resultSet.next()) {
             MemberVO member = new MemberVO();
            
             member.setId(resultSet.getLong(1));   // id
               member.setMemberEmail(resultSet.getString(2));   // 이메일
               member.setMemberPassword(resultSet.getString(3));   // 비밀번호
               member.setMemberName(resultSet.getString(4));   // 이름
               member.setMemberAge(resultSet.getInt(5));   // 나이
               member.setMemberGender(resultSet.getString(6));   // 성별
               member.setCreatedDate(resultSet.getString(7));   // 생성 날짜
               member.setUpdatedDate(resultSet.getString(8));   // 수정 날짜
         }
      } catch (SQLException e) {
         e.printStackTrace();
      } finally {
         try {
            if(resultSet != null) {
               resultSet.close();
            }
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         } catch (SQLException e) {
            throw new RuntimeException();
         }
      }
         return memberList;
      }
}