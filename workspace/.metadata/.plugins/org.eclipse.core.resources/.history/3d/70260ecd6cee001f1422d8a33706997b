package com.app.domain.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.management.RuntimeErrorException;

import com.app.jdbc.configuration.Configuration;
import com.app.domain.vo.MemberVO;

public class MemberDAO {
   private Connection connection;
   private PreparedStatement preparedStatement;
   private ResultSet resultSet;
   
//   회원가입
   public void insert(MemberVO memberVO) {
      String query = "INSERT INTO TBL_MEMBER "
            + "(ID, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_AGE, MEMBER_GENDER) "
            + "VALUES(SEQ_MEMBER.NEXTVAL, ?, ?, ?, ?, ?)";
      
      connection = Configuration.getConnection();
      try {
         preparedStatement = connection.prepareStatement(query);
         preparedStatement.setString(1, memberVO.getMemberEmail());
         preparedStatement.setString(2, memberVO.getMemberPassword());
         preparedStatement.setString(3, memberVO.getMemberName());
         preparedStatement.setInt(4, memberVO.getMemberAge());
         preparedStatement.setString(5, memberVO.getMemberGender());
         
         preparedStatement.executeUpdate();
         
      } catch (SQLException e) {
         e.printStackTrace();
      } finally {
         try {
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         } catch (SQLException e) {
            throw new RuntimeException();
         }
      }
            
   }
   
//   로그인
   public MemberVO selectByMemberEmailAndMemberPassword(MemberVO memberVO) {
      MemberVO member = null;
      String query = "SELECT "
            + "ID, MEMBER_EMAIL, MEMBER_PASSWORD, "
            + "MEMBER_NAME, MEMBER_AGE, MEMBER_GENDER, CREATED_DATE, UPDATED_DATE "
            + "FROM TBL_MEMBER "
            + "WHERE MEMBER_EMAIL = ? AND MEMBER_PASSWORD = ?";
      
      connection = Configuration.getConnection();
      try {
         preparedStatement = connection.prepareStatement(query);
         preparedStatement.setString(1, memberVO.getMemberEmail());
         preparedStatement.setString(2, memberVO.getMemberPassword());
         
         resultSet = preparedStatement.executeQuery();
         
         if(resultSet.next()) {
            member = new MemberVO();
            
            member.setId(resultSet.getLong(1));
            member.setMemberEmail(resultSet.getString(2));
            member.setMemberPassword(resultSet.getString(3));
            member.setMemberName(resultSet.getString(4));
            member.setMemberAge(resultSet.getInt(5));
            member.setMemberGender(resultSet.getString(6));
            member.setCreatedDate(resultSet.getString(7));
            member.setUpdatedDate(resultSet.getString(8));
         }
         
      } catch (SQLException e) {
         e.printStackTrace();
      } finally {
         try {
            if(resultSet != null) {
               resultSet.close();
            }
            if(preparedStatement != null) {
               preparedStatement.close();
            }
            if(connection != null) {
               connection.close();
            }
         } catch (SQLException e) {
            throw new RuntimeException();
         }
      }
      
      return member;
   }
//   아이디로 회원 조회
   public void select(MemberVO memberVO) {
	   String query = "SELECT "
			   +"*"
			   +"FROM TBL_MEMBER "
			   +"WHERE MEMBER_EMAIL = ?";
	   
	   connection = Configuration.getConnection();
	   
		try {
			preparedStatement = connection.prepareStatement(query);
			preparedStatement.setString(1, memberVO.getEmail());
			
			resultSet = preparedStatement.executeQuery();
			
			if(resultSet.next()) {
				MemberVO member = new MemberVO();
				
				member.setId(resultSet.getLong(1));
				member.setEmail(resultSet.getString(2));
				member.setName(resultSet.getString(3));
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} try {
			if (resultSet != null) {
				resultSet.close();
			}
			if (preparedStatement != null) {
				preparedStatement.close();
			}
			if(connection != null) {
				connection.close();
			}
		} catch (SQLException e) {
			throw new RuntimeException();
			
		}
			   
   }
//   회원 정보 수정
   
   
}


















